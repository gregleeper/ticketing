{"ast":null,"code":"var _jsxFileName = \"/Users/gregleeper/jds/pages/tickets/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../../components/layout\";\nimport { useMemo, useEffect, useState } from \"react\";\nimport { API, withSSRContext } from \"aws-amplify\";\nimport { ticketsByDate } from \"../../src/graphql/customQueries\";\nimport { listContracts } from \"../../src/graphql/queries.ts\";\nimport Link from \"next/link\";\nimport Table from \"../../components/table\";\nimport moment from \"moment\";\nimport { useQueryCache, useInfiniteQuery, useQuery, queryCache } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query-devtools\";\n\nconst AllTickets = () => {\n  const cache = useQueryCache();\n  const {\n    0: tickets,\n    1: setTickets\n  } = useState([]);\n  const {\n    0: contractFilter,\n    1: setContractFilter\n  } = useState();\n  const {\n    0: contracts,\n    1: setContracts\n  } = useState([]);\n  const {\n    0: isInitialLoad,\n    1: setIsInitialLoad\n  } = useState(true);\n  const {\n    data: contractsData\n  } = useQuery(\"contracts\", async () => {\n    const {\n      data: {\n        listContracts: myContracts\n      }\n    } = await API.graphql({\n      query: listContracts,\n      variables: {\n        limit: 2000\n      }\n    });\n    return myContracts;\n  });\n  const {\n    data,\n    isFetched,\n    isSuccess,\n    refetch\n  } = useQuery(\"tickets\", async () => {\n    const {\n      data: {\n        ticketsByDate: {\n          items: myTickets\n        }\n      }\n    } = await API.graphql({\n      query: ticketsByDate,\n      variables: {\n        type: \"Ticket\",\n        sortDirection: \"DESC\",\n        limit: 500\n      }\n    });\n    return myTickets;\n  }, {\n    cacheTime: 1000 * 60 * 5,\n    refetchOnReconnect: true\n  });\n  useEffect(() => {\n    if (data && isFetched) {\n      setTickets(data);\n    }\n  }, [data]);\n  useEffect(() => {\n    if (contractsData) {\n      let options = [];\n      contractsData.items.map(c => {\n        options.push({\n          value: c.id,\n          label: `${c.contractNumber} - ${c.contractTo.companyReportName} - ${c.contractType}`\n        });\n      });\n      setContracts(options);\n    }\n  }, [contractsData]);\n  const columns = useMemo(() => [{\n    Header: \"Edit\",\n    accessor: \"id\",\n    disableFilters: true,\n    Cell: ({\n      value\n    }) => __jsx(Link, {\n      href: \"/tickets/edit/[id]\",\n      as: `/tickets/edit/${value}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      className: \"text-blue-800 underline hover:text-blue-800 hover:no-underline pl-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \" \", \"Edit\"))\n  }, {\n    Header: \"Ticket #\",\n    accessor: \"ticketNumber\"\n  }, {\n    Header: \"Contract #\",\n    accessor: \"contract.contractNumber\",\n    Cell: ({\n      row,\n      value\n    }) => __jsx(Link, {\n      href: \"/contracts/view/[id]\",\n      as: `/contracts/view/${row.original.contractId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      className: \"text-blue-800 underline hover:text-blue-600 hover:no-underline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, value))\n  }, {\n    Header: \"Company Name\",\n    accessor: \"contract.contractTo.companyReportName\"\n  }, {\n    Header: \"Ticket Date\",\n    accessor: \"ticketDate\",\n    Cell: ({\n      value\n    }) => __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 30\n      }\n    }, moment(value).format(\"MM/DD/YY\"))\n  }, {\n    Header: \"Corresponding Contract\",\n    accessor: \"corresondingContract.contractNumber\",\n    Cell: ({\n      row,\n      value\n    }) => __jsx(Link, {\n      href: \"/contracts/view/[id]\",\n      as: `/contracts/view/${row.original.correspondingContractId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      className: \"text-blue-800 underline hover:text-blue-600 hover:no-underline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, value))\n  }, {\n    Header: \"Driver\",\n    accessor: \"driver\",\n    disableFilters: true\n  }, {\n    Header: \"Field #\",\n    accessor: \"fieldNum\",\n    disableFilters: true\n  }, {\n    Header: \"BaleCt\",\n    accessor: \"baleCount\",\n    disableFilters: true\n  }, {\n    Header: \"Gross W\",\n    accessor: \"grossWeight\",\n    disableFilters: true\n  }, {\n    Header: \"Tare W\",\n    accessor: \"tareWeight\",\n    disableFilters: true\n  }, {\n    Header: \"Net W\",\n    accessor: \"netWeight\",\n    disableFilters: true\n  }, {\n    Header: \"Net Tons\",\n    accessor: \"netTons\",\n    disableFilters: true,\n    Footer: ({\n      rows\n    }) => {\n      const total = useMemo(() => rows.reduce((sum, row) => row.values.netTons + sum, 0), [rows]);\n      return __jsx(\"div\", {\n        className: \"py-2 text-center flex justify-around items-center border-t-4 border-gray-900\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      }, __jsx(\"span\", {\n        className: \"text-gray-600\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      }, \"Total:\"), \" \"), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }, __jsx(\"span\", {\n        className: \"text-lg font-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }, total.toFixed(2))));\n    }\n  }, {\n    Header: \"Paid\",\n    accessor: \"paymentId\",\n    Cell: ({\n      row,\n      value\n    }) => value ? __jsx(Link, {\n      href: \"/payments/edit/[id]\",\n      as: `/payments/edit/${row.original.paymentId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      className: \"text-blue-800 underline hover:text-blue-600 hover:no-underline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, \"View\")) : null\n  }], []);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"px-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center w-1/2 mx-auto py-6 text-2xl font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, \"Tickets\")), __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"my-6 flex justify-between items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/tickets/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: \"px-3 py-2 border border-gray-800 shadow hover:bg-gray-800 hover:text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, \"Create New\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/tickets/all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: \"px-3 py-2 border border-gray-800 shadow hover:bg-gray-800 hover:text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, \"Get All Tickets\"))))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, isFetched ? __jsx(Table, {\n    data: tickets,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }) : __jsx(\"p\", {\n    className: \"text-2xl text-gray-900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, \"Loading... This could take a couple minutes while all the tickets are fetched.\"))), __jsx(ReactQueryDevtools, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  try {\n    const {\n      Auth\n    } = withSSRContext({\n      req\n    });\n    const user = await Auth.currentAuthenticatedUser();\n    return {\n      props: {\n        authenticated: true,\n        username: user.username\n      }\n    };\n  } catch (err) {\n    res.writeHead(302, {\n      Location: \"/sign-in\"\n    });\n    res.end();\n    return {\n      props: {}\n    };\n  }\n}\nexport default AllTickets;","map":{"version":3,"sources":["/Users/gregleeper/jds/pages/tickets/index.js"],"names":["Layout","useMemo","useEffect","useState","API","withSSRContext","ticketsByDate","listContracts","Link","Table","moment","useQueryCache","useInfiniteQuery","useQuery","queryCache","ReactQueryDevtools","AllTickets","cache","tickets","setTickets","contractFilter","setContractFilter","contracts","setContracts","isInitialLoad","setIsInitialLoad","data","contractsData","myContracts","graphql","query","variables","limit","isFetched","isSuccess","refetch","items","myTickets","type","sortDirection","cacheTime","refetchOnReconnect","options","map","c","push","value","id","label","contractNumber","contractTo","companyReportName","contractType","columns","Header","accessor","disableFilters","Cell","row","original","contractId","format","correspondingContractId","Footer","rows","total","reduce","sum","values","netTons","toFixed","paymentId","getServerSideProps","req","res","Auth","user","currentAuthenticatedUser","props","authenticated","username","err","writeHead","Location","end"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,GAAT,EAAcC,cAAd,QAAoC,aAApC;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,QAHF,EAIEC,UAJF,QAKO,aALP;AAMA,SAASC,kBAAT,QAAmC,sBAAnC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,KAAK,GAAGN,aAAa,EAA3B;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACiB,cAAD;AAAA,OAAiBC;AAAjB,MAAsClB,QAAQ,EAApD;AACA,QAAM;AAAA,OAACmB,SAAD;AAAA,OAAYC;AAAZ,MAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACqB,aAAD;AAAA,OAAgBC;AAAhB,MAAoCtB,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAM;AAAEuB,IAAAA,IAAI,EAAEC;AAAR,MAA0Bd,QAAQ,CAAC,WAAD,EAAc,YAAY;AAChE,UAAM;AACJa,MAAAA,IAAI,EAAE;AAAEnB,QAAAA,aAAa,EAAEqB;AAAjB;AADF,QAEF,MAAMxB,GAAG,CAACyB,OAAJ,CAAY;AACpBC,MAAAA,KAAK,EAAEvB,aADa;AAEpBwB,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE;AADE;AAFS,KAAZ,CAFV;AAQA,WAAOJ,WAAP;AACD,GAVuC,CAAxC;AAYA,QAAM;AAAEF,IAAAA,IAAF;AAAQO,IAAAA,SAAR;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA;AAA9B,MAA0CtB,QAAQ,CACtD,SADsD,EAEtD,YAAY;AACV,UAAM;AACJa,MAAAA,IAAI,EAAE;AACJpB,QAAAA,aAAa,EAAE;AAAE8B,UAAAA,KAAK,EAAEC;AAAT;AADX;AADF,QAIF,MAAMjC,GAAG,CAACyB,OAAJ,CAAY;AACpBC,MAAAA,KAAK,EAAExB,aADa;AAEpByB,MAAAA,SAAS,EAAE;AACTO,QAAAA,IAAI,EAAE,QADG;AAETC,QAAAA,aAAa,EAAE,MAFN;AAGTP,QAAAA,KAAK,EAAE;AAHE;AAFS,KAAZ,CAJV;AAYA,WAAOK,SAAP;AACD,GAhBqD,EAiBtD;AACEG,IAAAA,SAAS,EAAE,OAAO,EAAP,GAAY,CADzB;AAEEC,IAAAA,kBAAkB,EAAE;AAFtB,GAjBsD,CAAxD;AAuBAvC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,IAAI,IAAIO,SAAZ,EAAuB;AACrBd,MAAAA,UAAU,CAACO,IAAD,CAAV;AACD;AACF,GAJQ,EAIN,CAACA,IAAD,CAJM,CAAT;AAMAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyB,aAAJ,EAAmB;AACjB,UAAIe,OAAO,GAAG,EAAd;AACAf,MAAAA,aAAa,CAACS,KAAd,CAAoBO,GAApB,CAAyBC,CAAD,IAAO;AAC7BF,QAAAA,OAAO,CAACG,IAAR,CAAa;AACXC,UAAAA,KAAK,EAAEF,CAAC,CAACG,EADE;AAEXC,UAAAA,KAAK,EAAG,GAAEJ,CAAC,CAACK,cAAe,MAAKL,CAAC,CAACM,UAAF,CAAaC,iBAAkB,MAAKP,CAAC,CAACQ,YAAa;AAFxE,SAAb;AAID,OALD;AAMA7B,MAAAA,YAAY,CAACmB,OAAD,CAAZ;AACD;AACF,GAXQ,EAWN,CAACf,aAAD,CAXM,CAAT;AAaA,QAAM0B,OAAO,GAAGpD,OAAO,CACrB,MAAM,CACJ;AACEqD,IAAAA,MAAM,EAAE,MADV;AAEEC,IAAAA,QAAQ,EAAE,IAFZ;AAGEC,IAAAA,cAAc,EAAE,IAHlB;AAIEC,IAAAA,IAAI,EAAE,CAAC;AAAEX,MAAAA;AAAF,KAAD,KACJ,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,oBAAX;AAAgC,MAAA,EAAE,EAAG,iBAAgBA,KAAM,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,qEAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,SADF;AALJ,GADI,EAcJ;AACEQ,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAdI,EAkBJ;AACED,IAAAA,MAAM,EAAE,YADV;AAEEC,IAAAA,QAAQ,EAAE,yBAFZ;AAGEE,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,GAAF;AAAOZ,MAAAA;AAAP,KAAD,KACJ,MAAC,IAAD;AACE,MAAA,IAAI,EAAC,sBADP;AAEE,MAAA,EAAE,EAAG,mBAAkBY,GAAG,CAACC,QAAJ,CAAaC,UAAW,EAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,iEAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGd,KADH,CAJF;AAJJ,GAlBI,EAgCJ;AACEQ,IAAAA,MAAM,EAAE,cADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAhCI,EAoCJ;AACED,IAAAA,MAAM,EAAE,aADV;AAEEC,IAAAA,QAAQ,EAAE,YAFZ;AAGEE,IAAAA,IAAI,EAAE,CAAC;AAAEX,MAAAA;AAAF,KAAD,KAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOpC,MAAM,CAACoC,KAAD,CAAN,CAAce,MAAd,CAAqB,UAArB,CAAP;AAHvB,GApCI,EAyCJ;AACEP,IAAAA,MAAM,EAAE,wBADV;AAEEC,IAAAA,QAAQ,EAAE,qCAFZ;AAGEE,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,GAAF;AAAOZ,MAAAA;AAAP,KAAD,KACJ,MAAC,IAAD;AACE,MAAA,IAAI,EAAC,sBADP;AAEE,MAAA,EAAE,EAAG,mBAAkBY,GAAG,CAACC,QAAJ,CAAaG,uBAAwB,EAF9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,iEAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,KADH,CAJF;AAJJ,GAzCI,EAuDJ;AACEQ,IAAAA,MAAM,EAAE,QADV;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,cAAc,EAAE;AAHlB,GAvDI,EA4DJ;AACEF,IAAAA,MAAM,EAAE,SADV;AAEEC,IAAAA,QAAQ,EAAE,UAFZ;AAGEC,IAAAA,cAAc,EAAE;AAHlB,GA5DI,EAiEJ;AACEF,IAAAA,MAAM,EAAE,QADV;AAEEC,IAAAA,QAAQ,EAAE,WAFZ;AAGEC,IAAAA,cAAc,EAAE;AAHlB,GAjEI,EAsEJ;AACEF,IAAAA,MAAM,EAAE,SADV;AAEEC,IAAAA,QAAQ,EAAE,aAFZ;AAGEC,IAAAA,cAAc,EAAE;AAHlB,GAtEI,EA2EJ;AACEF,IAAAA,MAAM,EAAE,QADV;AAEEC,IAAAA,QAAQ,EAAE,YAFZ;AAGEC,IAAAA,cAAc,EAAE;AAHlB,GA3EI,EAgFJ;AACEF,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAE,WAFZ;AAGEC,IAAAA,cAAc,EAAE;AAHlB,GAhFI,EAqFJ;AACEF,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE,SAFZ;AAGEC,IAAAA,cAAc,EAAE,IAHlB;AAIEO,IAAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACpB,YAAMC,KAAK,GAAGhE,OAAO,CACnB,MAAM+D,IAAI,CAACE,MAAL,CAAY,CAACC,GAAD,EAAMT,GAAN,KAAcA,GAAG,CAACU,MAAJ,CAAWC,OAAX,GAAqBF,GAA/C,EAAoD,CAApD,CADa,EAEnB,CAACH,IAAD,CAFmB,CAArB;AAIA,aACE;AAAK,QAAA,SAAS,EAAC,8EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EACgD,GADhD,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCC,KAAK,CAACK,OAAN,CAAc,CAAd,CAArC,CADF,CAJF,CADF;AAUD;AAnBH,GArFI,EA0GJ;AACEhB,IAAAA,MAAM,EAAE,MADV;AAEEC,IAAAA,QAAQ,EAAE,WAFZ;AAGEE,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,GAAF;AAAOZ,MAAAA;AAAP,KAAD,KACJA,KAAK,GACH,MAAC,IAAD;AACE,MAAA,IAAI,EAAC,qBADP;AAEE,MAAA,EAAE,EAAG,kBAAiBY,GAAG,CAACC,QAAJ,CAAaY,SAAU,EAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,iEAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADG,GASD;AAbR,GA1GI,CADe,EA2HrB,EA3HqB,CAAvB;AA8HA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,4EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,4EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,CARF,CADF,CAJF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtC,SAAS,GACR,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEf,OAAb;AAAsB,IAAA,OAAO,EAAEmC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAGR;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAJJ,CAtBF,CADF,EAkCE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CADF;AAsCD,CAjOD;;AAmOA,OAAO,eAAemB,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAAgD;AACrD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAWtE,cAAc,CAAC;AAAEoE,MAAAA;AAAF,KAAD,CAA/B;AACA,UAAMG,IAAI,GAAG,MAAMD,IAAI,CAACE,wBAAL,EAAnB;AAEA,WAAO;AACLC,MAAAA,KAAK,EAAE;AACLC,QAAAA,aAAa,EAAE,IADV;AAELC,QAAAA,QAAQ,EAAEJ,IAAI,CAACI;AAFV;AADF,KAAP;AAMD,GAVD,CAUE,OAAOC,GAAP,EAAY;AACZP,IAAAA,GAAG,CAACQ,SAAJ,CAAc,GAAd,EAAmB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAnB;AACAT,IAAAA,GAAG,CAACU,GAAJ;AACA,WAAO;AACLN,MAAAA,KAAK,EAAE;AADF,KAAP;AAGD;AACF;AAED,eAAe9D,UAAf","sourcesContent":["import Layout from \"../../components/layout\";\nimport { useMemo, useEffect, useState } from \"react\";\nimport { API, withSSRContext } from \"aws-amplify\";\nimport { ticketsByDate } from \"../../src/graphql/customQueries\";\nimport { listContracts } from \"../../src/graphql/queries.ts\";\nimport Link from \"next/link\";\nimport Table from \"../../components/table\";\nimport moment from \"moment\";\nimport {\n  useQueryCache,\n  useInfiniteQuery,\n  useQuery,\n  queryCache,\n} from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query-devtools\";\n\nconst AllTickets = () => {\n  const cache = useQueryCache();\n  const [tickets, setTickets] = useState([]);\n  const [contractFilter, setContractFilter] = useState();\n  const [contracts, setContracts] = useState([]);\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n\n  const { data: contractsData } = useQuery(\"contracts\", async () => {\n    const {\n      data: { listContracts: myContracts },\n    } = await API.graphql({\n      query: listContracts,\n      variables: {\n        limit: 2000,\n      },\n    });\n    return myContracts;\n  });\n\n  const { data, isFetched, isSuccess, refetch } = useQuery(\n    \"tickets\",\n    async () => {\n      const {\n        data: {\n          ticketsByDate: { items: myTickets },\n        },\n      } = await API.graphql({\n        query: ticketsByDate,\n        variables: {\n          type: \"Ticket\",\n          sortDirection: \"DESC\",\n          limit: 500,\n        },\n      });\n      return myTickets;\n    },\n    {\n      cacheTime: 1000 * 60 * 5,\n      refetchOnReconnect: true,\n    }\n  );\n\n  useEffect(() => {\n    if (data && isFetched) {\n      setTickets(data);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (contractsData) {\n      let options = [];\n      contractsData.items.map((c) => {\n        options.push({\n          value: c.id,\n          label: `${c.contractNumber} - ${c.contractTo.companyReportName} - ${c.contractType}`,\n        });\n      });\n      setContracts(options);\n    }\n  }, [contractsData]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Edit\",\n        accessor: \"id\",\n        disableFilters: true,\n        Cell: ({ value }) => (\n          <Link href=\"/tickets/edit/[id]\" as={`/tickets/edit/${value}`}>\n            <a className=\"text-blue-800 underline hover:text-blue-800 hover:no-underline pl-2\">\n              {\" \"}\n              Edit\n            </a>\n          </Link>\n        ),\n      },\n      {\n        Header: \"Ticket #\",\n        accessor: \"ticketNumber\",\n      },\n      {\n        Header: \"Contract #\",\n        accessor: \"contract.contractNumber\",\n        Cell: ({ row, value }) => (\n          <Link\n            href=\"/contracts/view/[id]\"\n            as={`/contracts/view/${row.original.contractId}`}\n          >\n            <a className=\"text-blue-800 underline hover:text-blue-600 hover:no-underline \">\n              {value}\n            </a>\n          </Link>\n        ),\n      },\n      {\n        Header: \"Company Name\",\n        accessor: \"contract.contractTo.companyReportName\",\n      },\n      {\n        Header: \"Ticket Date\",\n        accessor: \"ticketDate\",\n        Cell: ({ value }) => <span>{moment(value).format(\"MM/DD/YY\")}</span>,\n      },\n      {\n        Header: \"Corresponding Contract\",\n        accessor: \"corresondingContract.contractNumber\",\n        Cell: ({ row, value }) => (\n          <Link\n            href=\"/contracts/view/[id]\"\n            as={`/contracts/view/${row.original.correspondingContractId}`}\n          >\n            <a className=\"text-blue-800 underline hover:text-blue-600 hover:no-underline \">\n              {value}\n            </a>\n          </Link>\n        ),\n      },\n      {\n        Header: \"Driver\",\n        accessor: \"driver\",\n        disableFilters: true,\n      },\n      {\n        Header: \"Field #\",\n        accessor: \"fieldNum\",\n        disableFilters: true,\n      },\n      {\n        Header: \"BaleCt\",\n        accessor: \"baleCount\",\n        disableFilters: true,\n      },\n      {\n        Header: \"Gross W\",\n        accessor: \"grossWeight\",\n        disableFilters: true,\n      },\n      {\n        Header: \"Tare W\",\n        accessor: \"tareWeight\",\n        disableFilters: true,\n      },\n      {\n        Header: \"Net W\",\n        accessor: \"netWeight\",\n        disableFilters: true,\n      },\n      {\n        Header: \"Net Tons\",\n        accessor: \"netTons\",\n        disableFilters: true,\n        Footer: ({ rows }) => {\n          const total = useMemo(\n            () => rows.reduce((sum, row) => row.values.netTons + sum, 0),\n            [rows]\n          );\n          return (\n            <div className=\"py-2 text-center flex justify-around items-center border-t-4 border-gray-900\">\n              <div>\n                <span className=\"text-gray-600\">Total:</span>{\" \"}\n              </div>\n              <div>\n                <span className=\"text-lg font-bold\">{total.toFixed(2)}</span>\n              </div>\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"Paid\",\n        accessor: \"paymentId\",\n        Cell: ({ row, value }) =>\n          value ? (\n            <Link\n              href=\"/payments/edit/[id]\"\n              as={`/payments/edit/${row.original.paymentId}`}\n            >\n              <a className=\"text-blue-800 underline hover:text-blue-600 hover:no-underline \">\n                View\n              </a>\n            </Link>\n          ) : null,\n      },\n    ],\n    []\n  );\n\n  return (\n    <Layout>\n      <div className=\"px-6\">\n        <div className=\"text-center w-1/2 mx-auto py-6 text-2xl font-bold\">\n          <h3>Tickets</h3>\n        </div>\n        <div className=\"\">\n          <div className=\"my-6 flex justify-between items-center\">\n            <div>\n              <Link href=\"/tickets/create\">\n                <a className=\"px-3 py-2 border border-gray-800 shadow hover:bg-gray-800 hover:text-white\">\n                  Create New\n                </a>\n              </Link>\n            </div>\n            <div>\n              <Link href=\"/tickets/all\">\n                <a className=\"px-3 py-2 border border-gray-800 shadow hover:bg-gray-800 hover:text-white\">\n                  Get All Tickets\n                </a>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div>\n          {isFetched ? (\n            <Table data={tickets} columns={columns} />\n          ) : (\n            <p className=\"text-2xl text-gray-900\">\n              Loading... This could take a couple minutes while all the tickets\n              are fetched.\n            </p>\n          )}\n        </div>\n      </div>\n      <ReactQueryDevtools />\n    </Layout>\n  );\n};\n\nexport async function getServerSideProps({ req, res }) {\n  try {\n    const { Auth } = withSSRContext({ req });\n    const user = await Auth.currentAuthenticatedUser();\n\n    return {\n      props: {\n        authenticated: true,\n        username: user.username,\n      },\n    };\n  } catch (err) {\n    res.writeHead(302, { Location: \"/sign-in\" });\n    res.end();\n    return {\n      props: {},\n    };\n  }\n}\n\nexport default AllTickets;\n"]},"metadata":{},"sourceType":"module"}