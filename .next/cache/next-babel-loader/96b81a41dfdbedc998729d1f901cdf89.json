{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\nexport const getCompanyInfo =\n/* GraphQL */\n`\n  query GetCompanyInfo($id: ID!) {\n    getCompanyInfo(id: $id) {\n      id\n      companyName\n      additionalName\n      address1\n      address2\n      city\n      state\n      zipCode\n      federalId\n      telephoneNum\n      faxNum\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listCompanyInfos =\n/* GraphQL */\n`\n  query ListCompanyInfos(\n    $filter: ModelCompanyInfoFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listCompanyInfos(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        companyName\n        additionalName\n        address1\n        address2\n        city\n        state\n        zipCode\n        federalId\n        telephoneNum\n        faxNum\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getCommodity =\n/* GraphQL */\n`\n  query GetCommodity($id: ID!) {\n    getCommodity(id: $id) {\n      id\n      name\n      calculateCode\n      billingCode\n      poundsPerBushel\n      contracts {\n        items {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listCommoditys =\n/* GraphQL */\n`\n  query ListCommoditys(\n    $filter: ModelCommodityFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listCommoditys(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getSettlement =\n/* GraphQL */\n`\n  query GetSettlement($id: ID!) {\n    getSettlement(id: $id) {\n      id\n      settlementNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listSettlements =\n/* GraphQL */\n`\n  query ListSettlements(\n    $filter: ModelSettlementFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listSettlements(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        settlementNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getInvoice =\n/* GraphQL */\n`\n  query GetInvoice($id: ID!) {\n    getInvoice(id: $id) {\n      id\n      invoiceNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listInvoices =\n/* GraphQL */\n`\n  query ListInvoices(\n    $filter: ModelInvoiceFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listInvoices(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        invoiceNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getVendor =\n/* GraphQL */\n`\n  query GetVendor($id: ID!) {\n    getVendor(id: $id) {\n      id\n      vendorNumber\n      companyReportName\n      companyListingName\n      address1\n      address2\n      city\n      state\n      zipCode\n      telephoneNum\n      attention\n      prepayment\n      prepaymentAmt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listVendors =\n/* GraphQL */\n`\n  query ListVendors(\n    $filter: ModelVendorFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listVendors(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getContract =\n/* GraphQL */\n`\n  query GetContract($id: ID!) {\n    getContract(id: $id) {\n      id\n      contractNumber\n      contractType\n      contractState\n      vendorId\n      commodityId\n      contractTo {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      quantity\n      contractPrice\n      salePrice\n      terms\n      weights\n      basis\n      remarks\n      beginDate\n      endDate\n      dateSigned\n      purchasedFrom\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      payments {\n        items {\n          id\n          type\n          tFileNumber\n          contractId\n          checkNumber\n          date\n          amount\n          totalPounds\n          invoiceId\n          settlementId\n          tonsCredit\n          overage\n          underage\n          paymentType\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      soldTo\n      commodity {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listContracts =\n/* GraphQL */\n`\n  query ListContracts(\n    $filter: ModelContractFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listContracts(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getPayment =\n/* GraphQL */\n`\n  query GetPayment($id: ID!) {\n    getPayment(id: $id) {\n      id\n      type\n      tFileNumber\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      checkNumber\n      date\n      amount\n      totalPounds\n      invoiceId\n      settlementId\n      tonsCredit\n      overage\n      underage\n      paymentType\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listPayments =\n/* GraphQL */\n`\n  query ListPayments(\n    $filter: ModelPaymentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listPayments(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        type\n        tFileNumber\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        tickets {\n          nextToken\n        }\n        checkNumber\n        date\n        amount\n        totalPounds\n        invoiceId\n        settlementId\n        tonsCredit\n        overage\n        underage\n        paymentType\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getTicket =\n/* GraphQL */\n`\n  query GetTicket($id: ID!) {\n    getTicket(id: $id) {\n      id\n      contractId\n      invoiceId\n      settlementId\n      paymentId\n      correspondingContractId\n      type\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      corresondingContract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      ticketDate\n      fieldNum\n      baleCount\n      ticketNumber\n      ladingNumber\n      driver\n      truckNumber\n      grossWeight\n      tareWeight\n      netWeight\n      netTons\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listTickets =\n/* GraphQL */\n`\n  query ListTickets(\n    $filter: ModelTicketFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listTickets(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        contractId\n        invoiceId\n        settlementId\n        paymentId\n        correspondingContractId\n        type\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        corresondingContract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        ticketDate\n        fieldNum\n        baleCount\n        ticketNumber\n        ladingNumber\n        driver\n        truckNumber\n        grossWeight\n        tareWeight\n        netWeight\n        netTons\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const settlementsSorted =\n/* GraphQL */\n`\n  query SettlementsSorted(\n    $type: String\n    $dueDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelSettlementFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    settlementsSorted(\n      type: $type\n      dueDate: $dueDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        settlementNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const settlementsByContract =\n/* GraphQL */\n`\n  query SettlementsByContract(\n    $contractId: ID\n    $dueDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelSettlementFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    settlementsByContract(\n      contractId: $contractId\n      dueDate: $dueDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        settlementNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const vendorSettlements =\n/* GraphQL */\n`\n  query VendorSettlements(\n    $vendorId: ID\n    $dueDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelSettlementFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    vendorSettlements(\n      vendorId: $vendorId\n      dueDate: $dueDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        settlementNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const invoicesSorted =\n/* GraphQL */\n`\n  query InvoicesSorted(\n    $type: String\n    $dueDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelInvoiceFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    invoicesSorted(\n      type: $type\n      dueDate: $dueDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        invoiceNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const invoicesByContract =\n/* GraphQL */\n`\n  query InvoicesByContract(\n    $contractId: ID\n    $dueDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelInvoiceFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    invoicesByContract(\n      contractId: $contractId\n      dueDate: $dueDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        invoiceNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const vendorInvoices =\n/* GraphQL */\n`\n  query VendorInvoices(\n    $vendorId: ID\n    $dueDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelInvoiceFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    vendorInvoices(\n      vendorId: $vendorId\n      dueDate: $dueDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        invoiceNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const contractsByStatus =\n/* GraphQL */\n`\n  query ContractsByStatus(\n    $contractState: ContractState\n    $contractTypeEndDate: ModelContractByStatusCompositeKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelContractFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    contractsByStatus(\n      contractState: $contractState\n      contractTypeEndDate: $contractTypeEndDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const contractsByVendor =\n/* GraphQL */\n`\n  query ContractsByVendor(\n    $vendorId: ID\n    $endDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelContractFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    contractsByVendor(\n      vendorId: $vendorId\n      endDate: $endDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const contractsByCommodity =\n/* GraphQL */\n`\n  query ContractsByCommodity(\n    $commodityId: ID\n    $endDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelContractFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    contractsByCommodity(\n      commodityId: $commodityId\n      endDate: $endDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const contractsByType =\n/* GraphQL */\n`\n  query ContractsByType(\n    $contractType: ContractType\n    $endDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelContractFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    contractsByType(\n      contractType: $contractType\n      endDate: $endDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const paymentsByContract =\n/* GraphQL */\n`\n  query PaymentsByContract(\n    $contractId: ID\n    $date: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelPaymentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    paymentsByContract(\n      contractId: $contractId\n      date: $date\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        type\n        tFileNumber\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        tickets {\n          nextToken\n        }\n        checkNumber\n        date\n        amount\n        totalPounds\n        invoiceId\n        settlementId\n        tonsCredit\n        overage\n        underage\n        paymentType\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const paymentsSorted =\n/* GraphQL */\n`\n  query PaymentsSorted(\n    $type: String\n    $date: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelPaymentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    paymentsSorted(\n      type: $type\n      date: $date\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        type\n        tFileNumber\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        tickets {\n          nextToken\n        }\n        checkNumber\n        date\n        amount\n        totalPounds\n        invoiceId\n        settlementId\n        tonsCredit\n        overage\n        underage\n        paymentType\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const ticketsByContract =\n/* GraphQL */\n`\n  query TicketsByContract(\n    $contractId: ID\n    $ticketDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelTicketFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    ticketsByContract(\n      contractId: $contractId\n      ticketDate: $ticketDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractId\n        invoiceId\n        settlementId\n        paymentId\n        correspondingContractId\n        type\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        corresondingContract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        ticketDate\n        fieldNum\n        baleCount\n        ticketNumber\n        ladingNumber\n        driver\n        truckNumber\n        grossWeight\n        tareWeight\n        netWeight\n        netTons\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const ticketsByContractId =\n/* GraphQL */\n`\n  query TicketsByContractId(\n    $contractId: ID\n    $ticketNumber: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelTicketFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    ticketsByContractId(\n      contractId: $contractId\n      ticketNumber: $ticketNumber\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractId\n        invoiceId\n        settlementId\n        paymentId\n        correspondingContractId\n        type\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        corresondingContract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        ticketDate\n        fieldNum\n        baleCount\n        ticketNumber\n        ladingNumber\n        driver\n        truckNumber\n        grossWeight\n        tareWeight\n        netWeight\n        netTons\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const ticketsByDate =\n/* GraphQL */\n`\n  query TicketsByDate(\n    $type: String\n    $ticketDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelTicketFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    ticketsByDate(\n      type: $type\n      ticketDate: $ticketDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractId\n        invoiceId\n        settlementId\n        paymentId\n        correspondingContractId\n        type\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        corresondingContract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        ticketDate\n        fieldNum\n        baleCount\n        ticketNumber\n        ladingNumber\n        driver\n        truckNumber\n        grossWeight\n        tareWeight\n        netWeight\n        netTons\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/gregleeper/jds/src/graphql/queries.ts"],"names":["getCompanyInfo","listCompanyInfos","getCommodity","listCommoditys","getSettlement","listSettlements","getInvoice","listInvoices","getVendor","listVendors","getContract","listContracts","getPayment","listPayments","getTicket","listTickets","settlementsSorted","settlementsByContract","vendorSettlements","invoicesSorted","invoicesByContract","vendorInvoices","contractsByStatus","contractsByVendor","contractsByCommodity","contractsByType","paymentsByContract","paymentsSorted","ticketsByContract","ticketsByContractId","ticketsByDate"],"mappings":"AAAA;;AACA;AACA;AAEA,OAAO,MAAMA,cAAc;AAAG;AAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO;AAmBP,OAAO,MAAMC,gBAAgB;AAAG;AAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBO;AA0BP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArCO;AAsCP,OAAO,MAAMC,cAAc;AAAG;AAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBO;AAuBP,OAAO,MAAMC,aAAa;AAAG;AAAelHO;AAmHP,OAAO,MAAMC,eAAe;AAAG;AAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnEO;AAoEP,OAAO,MAAMC,UAAU;AAAG;AAAe;AACzlHO;AAmHP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnEO;AAoEP,OAAO,MAAMC,SAAS;AAAG;AAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBO;AAqBP,OAAO,MAAMC,WAAW;AAAG;AAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BO;AA4BP,OAAO,MAAMC,WAAW;AAAG;AAAepGO;AAqGP,OAAO,MAAMC,aAAa;AAAG;AAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhEO;AAiEP,OAAO,MAAMC,UAAU;AAAG;AAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApGO;AAqGP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArDO;AAsDP,OAAO,MAAMC,SAAS;AAAG;AAAe;AACxrIO;AAsIP,OAAO,MAAMC,WAAW;AAAG;AAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5EO;AA6EP,OAAO,MAAMC,iBAAiB;AAAG;AAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7EO;AA8EP,OAAO,MAAMC,qBAAqB;AAAG;AAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7EO;AA8EP,OAAO,MAAMC,iBAAiB;AAAG;AAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7EO;AA8EP,OAAO,MAAMC,cAAc;AAAG;AAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7EO;AA8EP,OAAO,MAAMC,kBAAkB;AAAG;AAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7EO;AA8EP,OAAO,MAAMC,cAAc;AAAG;AAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7EO;AA8EP,OAAO,MAAMC,iBAAiB;AAAG;AAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1EO;AA2EP,OAAO,MAAMC,iBAAiB;AAAG;AAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1EO;AA2EP,OAAO,MAAMC,oBAAoB;AAAG;AAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1EO;AA2EP,OAAO,MAAMC,eAAe;AAAG;AAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1EO;AA2EP,OAAO,MAAMC,kBAAkB;AAAG;AAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/DO;AAgEP,OAAO,MAAMC,cAAc;AAAG;AAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/DO;AAgEP,OAAO,MAAMC,iBAAiB;AAAG;AAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtFO;AAuFP,OAAO,MAAMC,mBAAmB;AAAG;AAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtFO;AAuFP,OAAO,MAAMC,aAAa;AAAG;AAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtFO","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getCompanyInfo = /* GraphQL */ `\n  query GetCompanyInfo($id: ID!) {\n    getCompanyInfo(id: $id) {\n      id\n      companyName\n      additionalName\n      address1\n      address2\n      city\n      state\n      zipCode\n      federalId\n      telephoneNum\n      faxNum\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listCompanyInfos = /* GraphQL */ `\n  query ListCompanyInfos(\n    $filter: ModelCompanyInfoFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listCompanyInfos(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        companyName\n        additionalName\n        address1\n        address2\n        city\n        state\n        zipCode\n        federalId\n        telephoneNum\n        faxNum\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getCommodity = /* GraphQL */ `\n  query GetCommodity($id: ID!) {\n    getCommodity(id: $id) {\n      id\n      name\n      calculateCode\n      billingCode\n      poundsPerBushel\n      contracts {\n        items {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listCommoditys = /* GraphQL */ `\n  query ListCommoditys(\n    $filter: ModelCommodityFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listCommoditys(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getSettlement = /* GraphQL */ `\n  query GetSettlement($id: ID!) {\n    getSettlement(id: $id) {\n      id\n      settlementNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listSettlements = /* GraphQL */ `\n  query ListSettlements(\n    $filter: ModelSettlementFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listSettlements(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        settlementNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getInvoice = /* GraphQL */ `\n  query GetInvoice($id: ID!) {\n    getInvoice(id: $id) {\n      id\n      invoiceNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listInvoices = /* GraphQL */ `\n  query ListInvoices(\n    $filter: ModelInvoiceFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listInvoices(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        invoiceNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getVendor = /* GraphQL */ `\n  query GetVendor($id: ID!) {\n    getVendor(id: $id) {\n      id\n      vendorNumber\n      companyReportName\n      companyListingName\n      address1\n      address2\n      city\n      state\n      zipCode\n      telephoneNum\n      attention\n      prepayment\n      prepaymentAmt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listVendors = /* GraphQL */ `\n  query ListVendors(\n    $filter: ModelVendorFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listVendors(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getContract = /* GraphQL */ `\n  query GetContract($id: ID!) {\n    getContract(id: $id) {\n      id\n      contractNumber\n      contractType\n      contractState\n      vendorId\n      commodityId\n      contractTo {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      quantity\n      contractPrice\n      salePrice\n      terms\n      weights\n      basis\n      remarks\n      beginDate\n      endDate\n      dateSigned\n      purchasedFrom\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      payments {\n        items {\n          id\n          type\n          tFileNumber\n          contractId\n          checkNumber\n          date\n          amount\n          totalPounds\n          invoiceId\n          settlementId\n          tonsCredit\n          overage\n          underage\n          paymentType\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      soldTo\n      commodity {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listContracts = /* GraphQL */ `\n  query ListContracts(\n    $filter: ModelContractFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listContracts(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getPayment = /* GraphQL */ `\n  query GetPayment($id: ID!) {\n    getPayment(id: $id) {\n      id\n      type\n      tFileNumber\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      checkNumber\n      date\n      amount\n      totalPounds\n      invoiceId\n      settlementId\n      tonsCredit\n      overage\n      underage\n      paymentType\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listPayments = /* GraphQL */ `\n  query ListPayments(\n    $filter: ModelPaymentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listPayments(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        type\n        tFileNumber\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        tickets {\n          nextToken\n        }\n        checkNumber\n        date\n        amount\n        totalPounds\n        invoiceId\n        settlementId\n        tonsCredit\n        overage\n        underage\n        paymentType\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getTicket = /* GraphQL */ `\n  query GetTicket($id: ID!) {\n    getTicket(id: $id) {\n      id\n      contractId\n      invoiceId\n      settlementId\n      paymentId\n      correspondingContractId\n      type\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      corresondingContract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      ticketDate\n      fieldNum\n      baleCount\n      ticketNumber\n      ladingNumber\n      driver\n      truckNumber\n      grossWeight\n      tareWeight\n      netWeight\n      netTons\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listTickets = /* GraphQL */ `\n  query ListTickets(\n    $filter: ModelTicketFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listTickets(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        contractId\n        invoiceId\n        settlementId\n        paymentId\n        correspondingContractId\n        type\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        corresondingContract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        ticketDate\n        fieldNum\n        baleCount\n        ticketNumber\n        ladingNumber\n        driver\n        truckNumber\n        grossWeight\n        tareWeight\n        netWeight\n        netTons\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const settlementsSorted = /* GraphQL */ `\n  query SettlementsSorted(\n    $type: String\n    $dueDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelSettlementFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    settlementsSorted(\n      type: $type\n      dueDate: $dueDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        settlementNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const settlementsByContract = /* GraphQL */ `\n  query SettlementsByContract(\n    $contractId: ID\n    $dueDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelSettlementFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    settlementsByContract(\n      contractId: $contractId\n      dueDate: $dueDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        settlementNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const vendorSettlements = /* GraphQL */ `\n  query VendorSettlements(\n    $vendorId: ID\n    $dueDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelSettlementFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    vendorSettlements(\n      vendorId: $vendorId\n      dueDate: $dueDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        settlementNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const invoicesSorted = /* GraphQL */ `\n  query InvoicesSorted(\n    $type: String\n    $dueDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelInvoiceFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    invoicesSorted(\n      type: $type\n      dueDate: $dueDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        invoiceNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const invoicesByContract = /* GraphQL */ `\n  query InvoicesByContract(\n    $contractId: ID\n    $dueDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelInvoiceFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    invoicesByContract(\n      contractId: $contractId\n      dueDate: $dueDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        invoiceNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const vendorInvoices = /* GraphQL */ `\n  query VendorInvoices(\n    $vendorId: ID\n    $dueDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelInvoiceFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    vendorInvoices(\n      vendorId: $vendorId\n      dueDate: $dueDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        invoiceNumber\n        tickets {\n          nextToken\n        }\n        vendorId\n        vendor {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        amountOwed\n        beginDate\n        endDate\n        type\n        dueDate\n        paymentId\n        isPaid\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const contractsByStatus = /* GraphQL */ `\n  query ContractsByStatus(\n    $contractState: ContractState\n    $contractTypeEndDate: ModelContractByStatusCompositeKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelContractFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    contractsByStatus(\n      contractState: $contractState\n      contractTypeEndDate: $contractTypeEndDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const contractsByVendor = /* GraphQL */ `\n  query ContractsByVendor(\n    $vendorId: ID\n    $endDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelContractFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    contractsByVendor(\n      vendorId: $vendorId\n      endDate: $endDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const contractsByCommodity = /* GraphQL */ `\n  query ContractsByCommodity(\n    $commodityId: ID\n    $endDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelContractFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    contractsByCommodity(\n      commodityId: $commodityId\n      endDate: $endDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const contractsByType = /* GraphQL */ `\n  query ContractsByType(\n    $contractType: ContractType\n    $endDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelContractFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    contractsByType(\n      contractType: $contractType\n      endDate: $endDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const paymentsByContract = /* GraphQL */ `\n  query PaymentsByContract(\n    $contractId: ID\n    $date: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelPaymentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    paymentsByContract(\n      contractId: $contractId\n      date: $date\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        type\n        tFileNumber\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        tickets {\n          nextToken\n        }\n        checkNumber\n        date\n        amount\n        totalPounds\n        invoiceId\n        settlementId\n        tonsCredit\n        overage\n        underage\n        paymentType\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const paymentsSorted = /* GraphQL */ `\n  query PaymentsSorted(\n    $type: String\n    $date: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelPaymentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    paymentsSorted(\n      type: $type\n      date: $date\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        type\n        tFileNumber\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        tickets {\n          nextToken\n        }\n        checkNumber\n        date\n        amount\n        totalPounds\n        invoiceId\n        settlementId\n        tonsCredit\n        overage\n        underage\n        paymentType\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const ticketsByContract = /* GraphQL */ `\n  query TicketsByContract(\n    $contractId: ID\n    $ticketDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelTicketFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    ticketsByContract(\n      contractId: $contractId\n      ticketDate: $ticketDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractId\n        invoiceId\n        settlementId\n        paymentId\n        correspondingContractId\n        type\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        corresondingContract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        ticketDate\n        fieldNum\n        baleCount\n        ticketNumber\n        ladingNumber\n        driver\n        truckNumber\n        grossWeight\n        tareWeight\n        netWeight\n        netTons\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const ticketsByContractId = /* GraphQL */ `\n  query TicketsByContractId(\n    $contractId: ID\n    $ticketNumber: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelTicketFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    ticketsByContractId(\n      contractId: $contractId\n      ticketNumber: $ticketNumber\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractId\n        invoiceId\n        settlementId\n        paymentId\n        correspondingContractId\n        type\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        corresondingContract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        ticketDate\n        fieldNum\n        baleCount\n        ticketNumber\n        ladingNumber\n        driver\n        truckNumber\n        grossWeight\n        tareWeight\n        netWeight\n        netTons\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const ticketsByDate = /* GraphQL */ `\n  query TicketsByDate(\n    $type: String\n    $ticketDate: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelTicketFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    ticketsByDate(\n      type: $type\n      ticketDate: $ticketDate\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        contractId\n        invoiceId\n        settlementId\n        paymentId\n        correspondingContractId\n        type\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        corresondingContract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        ticketDate\n        fieldNum\n        baleCount\n        ticketNumber\n        ladingNumber\n        driver\n        truckNumber\n        grossWeight\n        tareWeight\n        netWeight\n        netTons\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}