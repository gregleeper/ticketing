{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\nexport const batchAddVendors =\n/* GraphQL */\n`\n  mutation BatchAddVendors($vendors: [CreateVendorInput]) {\n    batchAddVendors(vendors: $vendors) {\n      id\n      vendorNumber\n      companyReportName\n      companyListingName\n      address1\n      address2\n      city\n      state\n      zipCode\n      telephoneNum\n      attention\n      prepayment\n      prepaymentAmt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const batchAddContracts =\n/* GraphQL */\n`\n  mutation BatchAddContracts($contracts: [CreateContractInput]) {\n    batchAddContracts(contracts: $contracts) {\n      id\n      contractNumber\n      contractType\n      contractState\n      vendorId\n      commodityId\n      contractTo {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      quantity\n      contractPrice\n      salePrice\n      terms\n      weights\n      basis\n      remarks\n      beginDate\n      endDate\n      dateSigned\n      purchasedFrom\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      payments {\n        items {\n          id\n          type\n          tFileNumber\n          contractId\n          checkNumber\n          date\n          amount\n          totalPounds\n          invoiceId\n          settlementId\n          tonsCredit\n          overage\n          underage\n          paymentType\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      soldTo\n      commodity {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const batchAddTickets =\n/* GraphQL */\n`\n  mutation BatchAddTickets($tickets: [CreateTicketInput]) {\n    batchAddTickets(tickets: $tickets) {\n      id\n      contractId\n      invoiceId\n      settlementId\n      paymentId\n      correspondingContractId\n      type\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      corresondingContract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      ticketDate\n      fieldNum\n      baleCount\n      ticketNumber\n      ladingNumber\n      driver\n      truckNumber\n      grossWeight\n      tareWeight\n      netWeight\n      netTons\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const batchAddPayments =\n/* GraphQL */\n`\n  mutation BatchAddPayments($payments: [CreatePaymentInput]) {\n    batchAddPayments(payments: $payments) {\n      id\n      type\n      tFileNumber\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      checkNumber\n      date\n      amount\n      totalPounds\n      invoiceId\n      settlementId\n      tonsCredit\n      overage\n      underage\n      paymentType\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createCompanyInfo =\n/* GraphQL */\n`\n  mutation CreateCompanyInfo(\n    $input: CreateCompanyInfoInput!\n    $condition: ModelCompanyInfoConditionInput\n  ) {\n    createCompanyInfo(input: $input, condition: $condition) {\n      id\n      companyName\n      additionalName\n      address1\n      address2\n      city\n      state\n      zipCode\n      federalId\n      telephoneNum\n      faxNum\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateCompanyInfo =\n/* GraphQL */\n`\n  mutation UpdateCompanyInfo(\n    $input: UpdateCompanyInfoInput!\n    $condition: ModelCompanyInfoConditionInput\n  ) {\n    updateCompanyInfo(input: $input, condition: $condition) {\n      id\n      companyName\n      additionalName\n      address1\n      address2\n      city\n      state\n      zipCode\n      federalId\n      telephoneNum\n      faxNum\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteCompanyInfo =\n/* GraphQL */\n`\n  mutation DeleteCompanyInfo(\n    $input: DeleteCompanyInfoInput!\n    $condition: ModelCompanyInfoConditionInput\n  ) {\n    deleteCompanyInfo(input: $input, condition: $condition) {\n      id\n      companyName\n      additionalName\n      address1\n      address2\n      city\n      state\n      zipCode\n      federalId\n      telephoneNum\n      faxNum\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createCommodity =\n/* GraphQL */\n`\n  mutation CreateCommodity(\n    $input: CreateCommodityInput!\n    $condition: ModelCommodityConditionInput\n  ) {\n    createCommodity(input: $input, condition: $condition) {\n      id\n      name\n      calculateCode\n      billingCode\n      poundsPerBushel\n      contracts {\n        items {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateCommodity =\n/* GraphQL */\n`\n  mutation UpdateCommodity(\n    $input: UpdateCommodityInput!\n    $condition: ModelCommodityConditionInput\n  ) {\n    updateCommodity(input: $input, condition: $condition) {\n      id\n      name\n      calculateCode\n      billingCode\n      poundsPerBushel\n      contracts {\n        items {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteCommodity =\n/* GraphQL */\n`\n  mutation DeleteCommodity(\n    $input: DeleteCommodityInput!\n    $condition: ModelCommodityConditionInput\n  ) {\n    deleteCommodity(input: $input, condition: $condition) {\n      id\n      name\n      calculateCode\n      billingCode\n      poundsPerBushel\n      contracts {\n        items {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createSettlement =\n/* GraphQL */\n`\n  mutation CreateSettlement(\n    $input: CreateSettlementInput!\n    $condition: ModelSettlementConditionInput\n  ) {\n    createSettlement(input: $input, condition: $condition) {\n      id\n      settlementNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateSettlement =\n/* GraphQL */\n`\n  mutation UpdateSettlement(\n    $input: UpdateSettlementInput!\n    $condition: ModelSettlementConditionInput\n  ) {\n    updateSettlement(input: $input, condition: $condition) {\n      id\n      settlementNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteSettlement =\n/* GraphQL */\n`\n  mutation DeleteSettlement(\n    $input: DeleteSettlementInput!\n    $condition: ModelSettlementConditionInput\n  ) {\n    deleteSettlement(input: $input, condition: $condition) {\n      id\n      settlementNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createInvoice =\n/* GraphQL */\n`\n  mutation CreateInvoice(\n    $input: CreateInvoiceInput!\n    $condition: ModelInvoiceConditionInput\n  ) {\n    createInvoice(input: $input, condition: $condition) {\n      id\n      invoiceNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateInvoice =\n/* GraphQL */\n`\n  mutation UpdateInvoice(\n    $input: UpdateInvoiceInput!\n    $condition: ModelInvoiceConditionInput\n  ) {\n    updateInvoice(input: $input, condition: $condition) {\n      id\n      invoiceNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteInvoice =\n/* GraphQL */\n`\n  mutation DeleteInvoice(\n    $input: DeleteInvoiceInput!\n    $condition: ModelInvoiceConditionInput\n  ) {\n    deleteInvoice(input: $input, condition: $condition) {\n      id\n      invoiceNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createVendor =\n/* GraphQL */\n`\n  mutation CreateVendor(\n    $input: CreateVendorInput!\n    $condition: ModelVendorConditionInput\n  ) {\n    createVendor(input: $input, condition: $condition) {\n      id\n      vendorNumber\n      companyReportName\n      companyListingName\n      address1\n      address2\n      city\n      state\n      zipCode\n      telephoneNum\n      attention\n      prepayment\n      prepaymentAmt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateVendor =\n/* GraphQL */\n`\n  mutation UpdateVendor(\n    $input: UpdateVendorInput!\n    $condition: ModelVendorConditionInput\n  ) {\n    updateVendor(input: $input, condition: $condition) {\n      id\n      vendorNumber\n      companyReportName\n      companyListingName\n      address1\n      address2\n      city\n      state\n      zipCode\n      telephoneNum\n      attention\n      prepayment\n      prepaymentAmt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteVendor =\n/* GraphQL */\n`\n  mutation DeleteVendor(\n    $input: DeleteVendorInput!\n    $condition: ModelVendorConditionInput\n  ) {\n    deleteVendor(input: $input, condition: $condition) {\n      id\n      vendorNumber\n      companyReportName\n      companyListingName\n      address1\n      address2\n      city\n      state\n      zipCode\n      telephoneNum\n      attention\n      prepayment\n      prepaymentAmt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createContract =\n/* GraphQL */\n`\n  mutation CreateContract(\n    $input: CreateContractInput!\n    $condition: ModelContractConditionInput\n  ) {\n    createContract(input: $input, condition: $condition) {\n      id\n      contractNumber\n      contractType\n      contractState\n      vendorId\n      commodityId\n      contractTo {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      quantity\n      contractPrice\n      salePrice\n      terms\n      weights\n      basis\n      remarks\n      beginDate\n      endDate\n      dateSigned\n      purchasedFrom\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      payments {\n        items {\n          id\n          type\n          tFileNumber\n          contractId\n          checkNumber\n          date\n          amount\n          totalPounds\n          invoiceId\n          settlementId\n          tonsCredit\n          overage\n          underage\n          paymentType\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      soldTo\n      commodity {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateContract =\n/* GraphQL */\n`\n  mutation UpdateContract(\n    $input: UpdateContractInput!\n    $condition: ModelContractConditionInput\n  ) {\n    updateContract(input: $input, condition: $condition) {\n      id\n      contractNumber\n      contractType\n      contractState\n      vendorId\n      commodityId\n      contractTo {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      quantity\n      contractPrice\n      salePrice\n      terms\n      weights\n      basis\n      remarks\n      beginDate\n      endDate\n      dateSigned\n      purchasedFrom\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      payments {\n        items {\n          id\n          type\n          tFileNumber\n          contractId\n          checkNumber\n          date\n          amount\n          totalPounds\n          invoiceId\n          settlementId\n          tonsCredit\n          overage\n          underage\n          paymentType\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      soldTo\n      commodity {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteContract =\n/* GraphQL */\n`\n  mutation DeleteContract(\n    $input: DeleteContractInput!\n    $condition: ModelContractConditionInput\n  ) {\n    deleteContract(input: $input, condition: $condition) {\n      id\n      contractNumber\n      contractType\n      contractState\n      vendorId\n      commodityId\n      contractTo {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      quantity\n      contractPrice\n      salePrice\n      terms\n      weights\n      basis\n      remarks\n      beginDate\n      endDate\n      dateSigned\n      purchasedFrom\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      payments {\n        items {\n          id\n          type\n          tFileNumber\n          contractId\n          checkNumber\n          date\n          amount\n          totalPounds\n          invoiceId\n          settlementId\n          tonsCredit\n          overage\n          underage\n          paymentType\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      soldTo\n      commodity {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createPayment =\n/* GraphQL */\n`\n  mutation CreatePayment(\n    $input: CreatePaymentInput!\n    $condition: ModelPaymentConditionInput\n  ) {\n    createPayment(input: $input, condition: $condition) {\n      id\n      type\n      tFileNumber\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      checkNumber\n      date\n      amount\n      totalPounds\n      invoiceId\n      settlementId\n      tonsCredit\n      overage\n      underage\n      paymentType\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updatePayment =\n/* GraphQL */\n`\n  mutation UpdatePayment(\n    $input: UpdatePaymentInput!\n    $condition: ModelPaymentConditionInput\n  ) {\n    updatePayment(input: $input, condition: $condition) {\n      id\n      type\n      tFileNumber\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      checkNumber\n      date\n      amount\n      totalPounds\n      invoiceId\n      settlementId\n      tonsCredit\n      overage\n      underage\n      paymentType\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deletePayment =\n/* GraphQL */\n`\n  mutation DeletePayment(\n    $input: DeletePaymentInput!\n    $condition: ModelPaymentConditionInput\n  ) {\n    deletePayment(input: $input, condition: $condition) {\n      id\n      type\n      tFileNumber\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      checkNumber\n      date\n      amount\n      totalPounds\n      invoiceId\n      settlementId\n      tonsCredit\n      overage\n      underage\n      paymentType\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createTicket =\n/* GraphQL */\n`\n  mutation CreateTicket(\n    $input: CreateTicketInput!\n    $condition: ModelTicketConditionInput\n  ) {\n    createTicket(input: $input, condition: $condition) {\n      id\n      contractId\n      invoiceId\n      settlementId\n      paymentId\n      correspondingContractId\n      type\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      corresondingContract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      ticketDate\n      fieldNum\n      baleCount\n      ticketNumber\n      ladingNumber\n      driver\n      truckNumber\n      grossWeight\n      tareWeight\n      netWeight\n      netTons\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateTicket =\n/* GraphQL */\n`\n  mutation UpdateTicket(\n    $input: UpdateTicketInput!\n    $condition: ModelTicketConditionInput\n  ) {\n    updateTicket(input: $input, condition: $condition) {\n      id\n      contractId\n      invoiceId\n      settlementId\n      paymentId\n      correspondingContractId\n      type\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      corresondingContract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      ticketDate\n      fieldNum\n      baleCount\n      ticketNumber\n      ladingNumber\n      driver\n      truckNumber\n      grossWeight\n      tareWeight\n      netWeight\n      netTons\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteTicket =\n/* GraphQL */\n`\n  mutation DeleteTicket(\n    $input: DeleteTicketInput!\n    $condition: ModelTicketConditionInput\n  ) {\n    deleteTicket(input: $input, condition: $condition) {\n      id\n      contractId\n      invoiceId\n      settlementId\n      paymentId\n      correspondingContractId\n      type\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      corresondingContract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      ticketDate\n      fieldNum\n      baleCount\n      ticketNumber\n      ladingNumber\n      driver\n      truckNumber\n      grossWeight\n      tareWeight\n      netWeight\n      netTons\n      createdAt\n      updatedAt\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/gregleeper/jds/src/graphql/mutations.ts"],"names":["batchAddVendors","batchAddContracts","batchAddTickets","batchAddPayments","createCompanyInfo","updateCompanyInfo","deleteCompanyInfo","createCommodity","updateCommodity","deleteCommodity","createSettlement","updateSettlement","deleteSettlement","createInvoice","updateInvoice","deleteInvoice","createVendor","updateVendor","deleteVendor","createContract","updateContract","deleteContract","createPayment","updatePayment","deletePayment","createTicket","updateTicket","deleteTicket"],"mappings":"AAAA;;AACA;AACA;AAEA,OAAO,MAAMA,eAAe;AAAG;AAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBO;AAqBP,OAAO,MAAMC,iBAAiB;AAAG;AAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApGO;AAqGP,OAAO,MAAMC,eAAe;AAAG;AAAerIO;AAsIP,OAAO,MAAMC,gBAAgB;AAAG;AAAepGO;AAqGP,OAAO,MAAMC,iBAAiB;AAAG;AAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBO;AAsBP,OAAO,MAAMC,iBAAiB;AAAG;AAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBO;AAsBP,OAAO,MAAMC,iBAAiB;AAAG;AAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBO;AAsBP,OAAO,MAAMC,eAAe;AAAG;AAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxCO;AAyCP,OAAO,MAAMC,eAAe;AAAG;AAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxCO;AAyCP,OAAO,MAAMC,eAAe;AAAG;AAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxCO;AAyCP,OAAO,MAAMC,gBAAgB;AAAG;AAAerHO;AAsHP,OAAO,MAAMC,gBAAgB;AAAG;AAAerHO;AAsHP,OAAO,MAAMC,gBAAgB;AAAG;AAAerHO;AAsHP,OAAO,MAAMC,aAAa;AAAG;AAAerHO;AAsHP,OAAO,MAAMC,aAAa;AAAG;AAAerHO;AAsHP,OAAO,MAAMC,aAAa;AAAG;AAAerHO;AAsHP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBO;AAwBP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBO;AAwBP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBO;AAwBP,OAAO,MAAMC,cAAc;AAAG;AAAevGO;AAwGP,OAAO,MAAMC,cAAc;AAAG;AAAevGO;AAwGP,OAAO,MAAMC,cAAc;AAAG;AAAevGO;AAwGP,OAAO,MAAMC,aAAa;AAAG;AAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvGO;AAwGP,OAAO,MAAMC,aAAa;AAAG;AAAevGO;AAwGP,OAAO,MAAMC,aAAa;AAAG;AAAevGO;AAwGP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxIO;AAyIP,OAAO,MAAMC,YAAY;AAAG;AAAexIO;AAyIP,OAAO,MAAMC,YAAY;AAAG;AAAexIO","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const batchAddVendors = /* GraphQL */ `\n  mutation BatchAddVendors($vendors: [CreateVendorInput]) {\n    batchAddVendors(vendors: $vendors) {\n      id\n      vendorNumber\n      companyReportName\n      companyListingName\n      address1\n      address2\n      city\n      state\n      zipCode\n      telephoneNum\n      attention\n      prepayment\n      prepaymentAmt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const batchAddContracts = /* GraphQL */ `\n  mutation BatchAddContracts($contracts: [CreateContractInput]) {\n    batchAddContracts(contracts: $contracts) {\n      id\n      contractNumber\n      contractType\n      contractState\n      vendorId\n      commodityId\n      contractTo {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      quantity\n      contractPrice\n      salePrice\n      terms\n      weights\n      basis\n      remarks\n      beginDate\n      endDate\n      dateSigned\n      purchasedFrom\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      payments {\n        items {\n          id\n          type\n          tFileNumber\n          contractId\n          checkNumber\n          date\n          amount\n          totalPounds\n          invoiceId\n          settlementId\n          tonsCredit\n          overage\n          underage\n          paymentType\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      soldTo\n      commodity {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const batchAddTickets = /* GraphQL */ `\n  mutation BatchAddTickets($tickets: [CreateTicketInput]) {\n    batchAddTickets(tickets: $tickets) {\n      id\n      contractId\n      invoiceId\n      settlementId\n      paymentId\n      correspondingContractId\n      type\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      corresondingContract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      ticketDate\n      fieldNum\n      baleCount\n      ticketNumber\n      ladingNumber\n      driver\n      truckNumber\n      grossWeight\n      tareWeight\n      netWeight\n      netTons\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const batchAddPayments = /* GraphQL */ `\n  mutation BatchAddPayments($payments: [CreatePaymentInput]) {\n    batchAddPayments(payments: $payments) {\n      id\n      type\n      tFileNumber\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      checkNumber\n      date\n      amount\n      totalPounds\n      invoiceId\n      settlementId\n      tonsCredit\n      overage\n      underage\n      paymentType\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createCompanyInfo = /* GraphQL */ `\n  mutation CreateCompanyInfo(\n    $input: CreateCompanyInfoInput!\n    $condition: ModelCompanyInfoConditionInput\n  ) {\n    createCompanyInfo(input: $input, condition: $condition) {\n      id\n      companyName\n      additionalName\n      address1\n      address2\n      city\n      state\n      zipCode\n      federalId\n      telephoneNum\n      faxNum\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateCompanyInfo = /* GraphQL */ `\n  mutation UpdateCompanyInfo(\n    $input: UpdateCompanyInfoInput!\n    $condition: ModelCompanyInfoConditionInput\n  ) {\n    updateCompanyInfo(input: $input, condition: $condition) {\n      id\n      companyName\n      additionalName\n      address1\n      address2\n      city\n      state\n      zipCode\n      federalId\n      telephoneNum\n      faxNum\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteCompanyInfo = /* GraphQL */ `\n  mutation DeleteCompanyInfo(\n    $input: DeleteCompanyInfoInput!\n    $condition: ModelCompanyInfoConditionInput\n  ) {\n    deleteCompanyInfo(input: $input, condition: $condition) {\n      id\n      companyName\n      additionalName\n      address1\n      address2\n      city\n      state\n      zipCode\n      federalId\n      telephoneNum\n      faxNum\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createCommodity = /* GraphQL */ `\n  mutation CreateCommodity(\n    $input: CreateCommodityInput!\n    $condition: ModelCommodityConditionInput\n  ) {\n    createCommodity(input: $input, condition: $condition) {\n      id\n      name\n      calculateCode\n      billingCode\n      poundsPerBushel\n      contracts {\n        items {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateCommodity = /* GraphQL */ `\n  mutation UpdateCommodity(\n    $input: UpdateCommodityInput!\n    $condition: ModelCommodityConditionInput\n  ) {\n    updateCommodity(input: $input, condition: $condition) {\n      id\n      name\n      calculateCode\n      billingCode\n      poundsPerBushel\n      contracts {\n        items {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteCommodity = /* GraphQL */ `\n  mutation DeleteCommodity(\n    $input: DeleteCommodityInput!\n    $condition: ModelCommodityConditionInput\n  ) {\n    deleteCommodity(input: $input, condition: $condition) {\n      id\n      name\n      calculateCode\n      billingCode\n      poundsPerBushel\n      contracts {\n        items {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          contractPrice\n          salePrice\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createSettlement = /* GraphQL */ `\n  mutation CreateSettlement(\n    $input: CreateSettlementInput!\n    $condition: ModelSettlementConditionInput\n  ) {\n    createSettlement(input: $input, condition: $condition) {\n      id\n      settlementNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateSettlement = /* GraphQL */ `\n  mutation UpdateSettlement(\n    $input: UpdateSettlementInput!\n    $condition: ModelSettlementConditionInput\n  ) {\n    updateSettlement(input: $input, condition: $condition) {\n      id\n      settlementNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteSettlement = /* GraphQL */ `\n  mutation DeleteSettlement(\n    $input: DeleteSettlementInput!\n    $condition: ModelSettlementConditionInput\n  ) {\n    deleteSettlement(input: $input, condition: $condition) {\n      id\n      settlementNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createInvoice = /* GraphQL */ `\n  mutation CreateInvoice(\n    $input: CreateInvoiceInput!\n    $condition: ModelInvoiceConditionInput\n  ) {\n    createInvoice(input: $input, condition: $condition) {\n      id\n      invoiceNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateInvoice = /* GraphQL */ `\n  mutation UpdateInvoice(\n    $input: UpdateInvoiceInput!\n    $condition: ModelInvoiceConditionInput\n  ) {\n    updateInvoice(input: $input, condition: $condition) {\n      id\n      invoiceNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteInvoice = /* GraphQL */ `\n  mutation DeleteInvoice(\n    $input: DeleteInvoiceInput!\n    $condition: ModelInvoiceConditionInput\n  ) {\n    deleteInvoice(input: $input, condition: $condition) {\n      id\n      invoiceNumber\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      vendorId\n      vendor {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      amountOwed\n      beginDate\n      endDate\n      type\n      dueDate\n      paymentId\n      isPaid\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createVendor = /* GraphQL */ `\n  mutation CreateVendor(\n    $input: CreateVendorInput!\n    $condition: ModelVendorConditionInput\n  ) {\n    createVendor(input: $input, condition: $condition) {\n      id\n      vendorNumber\n      companyReportName\n      companyListingName\n      address1\n      address2\n      city\n      state\n      zipCode\n      telephoneNum\n      attention\n      prepayment\n      prepaymentAmt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateVendor = /* GraphQL */ `\n  mutation UpdateVendor(\n    $input: UpdateVendorInput!\n    $condition: ModelVendorConditionInput\n  ) {\n    updateVendor(input: $input, condition: $condition) {\n      id\n      vendorNumber\n      companyReportName\n      companyListingName\n      address1\n      address2\n      city\n      state\n      zipCode\n      telephoneNum\n      attention\n      prepayment\n      prepaymentAmt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteVendor = /* GraphQL */ `\n  mutation DeleteVendor(\n    $input: DeleteVendorInput!\n    $condition: ModelVendorConditionInput\n  ) {\n    deleteVendor(input: $input, condition: $condition) {\n      id\n      vendorNumber\n      companyReportName\n      companyListingName\n      address1\n      address2\n      city\n      state\n      zipCode\n      telephoneNum\n      attention\n      prepayment\n      prepaymentAmt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createContract = /* GraphQL */ `\n  mutation CreateContract(\n    $input: CreateContractInput!\n    $condition: ModelContractConditionInput\n  ) {\n    createContract(input: $input, condition: $condition) {\n      id\n      contractNumber\n      contractType\n      contractState\n      vendorId\n      commodityId\n      contractTo {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      quantity\n      contractPrice\n      salePrice\n      terms\n      weights\n      basis\n      remarks\n      beginDate\n      endDate\n      dateSigned\n      purchasedFrom\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      payments {\n        items {\n          id\n          type\n          tFileNumber\n          contractId\n          checkNumber\n          date\n          amount\n          totalPounds\n          invoiceId\n          settlementId\n          tonsCredit\n          overage\n          underage\n          paymentType\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      soldTo\n      commodity {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateContract = /* GraphQL */ `\n  mutation UpdateContract(\n    $input: UpdateContractInput!\n    $condition: ModelContractConditionInput\n  ) {\n    updateContract(input: $input, condition: $condition) {\n      id\n      contractNumber\n      contractType\n      contractState\n      vendorId\n      commodityId\n      contractTo {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      quantity\n      contractPrice\n      salePrice\n      terms\n      weights\n      basis\n      remarks\n      beginDate\n      endDate\n      dateSigned\n      purchasedFrom\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      payments {\n        items {\n          id\n          type\n          tFileNumber\n          contractId\n          checkNumber\n          date\n          amount\n          totalPounds\n          invoiceId\n          settlementId\n          tonsCredit\n          overage\n          underage\n          paymentType\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      soldTo\n      commodity {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteContract = /* GraphQL */ `\n  mutation DeleteContract(\n    $input: DeleteContractInput!\n    $condition: ModelContractConditionInput\n  ) {\n    deleteContract(input: $input, condition: $condition) {\n      id\n      contractNumber\n      contractType\n      contractState\n      vendorId\n      commodityId\n      contractTo {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      quantity\n      contractPrice\n      salePrice\n      terms\n      weights\n      basis\n      remarks\n      beginDate\n      endDate\n      dateSigned\n      purchasedFrom\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      payments {\n        items {\n          id\n          type\n          tFileNumber\n          contractId\n          checkNumber\n          date\n          amount\n          totalPounds\n          invoiceId\n          settlementId\n          tonsCredit\n          overage\n          underage\n          paymentType\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      soldTo\n      commodity {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createPayment = /* GraphQL */ `\n  mutation CreatePayment(\n    $input: CreatePaymentInput!\n    $condition: ModelPaymentConditionInput\n  ) {\n    createPayment(input: $input, condition: $condition) {\n      id\n      type\n      tFileNumber\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      checkNumber\n      date\n      amount\n      totalPounds\n      invoiceId\n      settlementId\n      tonsCredit\n      overage\n      underage\n      paymentType\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updatePayment = /* GraphQL */ `\n  mutation UpdatePayment(\n    $input: UpdatePaymentInput!\n    $condition: ModelPaymentConditionInput\n  ) {\n    updatePayment(input: $input, condition: $condition) {\n      id\n      type\n      tFileNumber\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      checkNumber\n      date\n      amount\n      totalPounds\n      invoiceId\n      settlementId\n      tonsCredit\n      overage\n      underage\n      paymentType\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deletePayment = /* GraphQL */ `\n  mutation DeletePayment(\n    $input: DeletePaymentInput!\n    $condition: ModelPaymentConditionInput\n  ) {\n    deletePayment(input: $input, condition: $condition) {\n      id\n      type\n      tFileNumber\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      tickets {\n        items {\n          id\n          contractId\n          invoiceId\n          settlementId\n          paymentId\n          correspondingContractId\n          type\n          ticketDate\n          fieldNum\n          baleCount\n          ticketNumber\n          ladingNumber\n          driver\n          truckNumber\n          grossWeight\n          tareWeight\n          netWeight\n          netTons\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      checkNumber\n      date\n      amount\n      totalPounds\n      invoiceId\n      settlementId\n      tonsCredit\n      overage\n      underage\n      paymentType\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createTicket = /* GraphQL */ `\n  mutation CreateTicket(\n    $input: CreateTicketInput!\n    $condition: ModelTicketConditionInput\n  ) {\n    createTicket(input: $input, condition: $condition) {\n      id\n      contractId\n      invoiceId\n      settlementId\n      paymentId\n      correspondingContractId\n      type\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      corresondingContract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      ticketDate\n      fieldNum\n      baleCount\n      ticketNumber\n      ladingNumber\n      driver\n      truckNumber\n      grossWeight\n      tareWeight\n      netWeight\n      netTons\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateTicket = /* GraphQL */ `\n  mutation UpdateTicket(\n    $input: UpdateTicketInput!\n    $condition: ModelTicketConditionInput\n  ) {\n    updateTicket(input: $input, condition: $condition) {\n      id\n      contractId\n      invoiceId\n      settlementId\n      paymentId\n      correspondingContractId\n      type\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      corresondingContract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      ticketDate\n      fieldNum\n      baleCount\n      ticketNumber\n      ladingNumber\n      driver\n      truckNumber\n      grossWeight\n      tareWeight\n      netWeight\n      netTons\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteTicket = /* GraphQL */ `\n  mutation DeleteTicket(\n    $input: DeleteTicketInput!\n    $condition: ModelTicketConditionInput\n  ) {\n    deleteTicket(input: $input, condition: $condition) {\n      id\n      contractId\n      invoiceId\n      settlementId\n      paymentId\n      correspondingContractId\n      type\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      corresondingContract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        contractPrice\n        salePrice\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        tickets {\n          nextToken\n        }\n        payments {\n          nextToken\n        }\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      ticketDate\n      fieldNum\n      baleCount\n      ticketNumber\n      ladingNumber\n      driver\n      truckNumber\n      grossWeight\n      tareWeight\n      netWeight\n      netTons\n      createdAt\n      updatedAt\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}